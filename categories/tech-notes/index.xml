<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech-notes on 不是追风少年</title><link>https://blog.formalscience.com/categories/tech-notes/</link><description>Recent content in tech-notes on 不是追风少年</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 29 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.formalscience.com/categories/tech-notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Encounter Kubernetes</title><link>https://blog.formalscience.com/drafts/encounter_kubernetes/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/drafts/encounter_kubernetes/</guid><description/></item><item><title>Go to Rust （一）</title><link>https://blog.formalscience.com/2018/12/26/2018-12-26-go-to-rust/</link><pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/2018/12/26/2018-12-26-go-to-rust/</guid><description>这几天看了 Rust 文档，把一些概念整理一下。
通过 cargo 新建一个项目，然后去管理其生命流程，这种现代做法很方便。 对于 statement 和 expression 的使用方式和 scheme 有些类似，可以返回最后一个 expression 的值。 可能返回错误的地方使用 Result 类型，很类似 Haskell 的处理流程。 模式匹配的方式很像 Ocaml 。 ownership 机制很新颖，限制能够带来巨大的力量。让我想到了《全职猎人》中对某项能力增加限制条件可以增加这个能力的威力的设定。 Option 类型就是 Haskell 的 Maybe 。 generics 的设计不知道有没有参考 C++ 的 template 概念。 目前只看到文档的第 11 章，Rust 语言的很多概念都能够在其他语言找到对应，只有 ownership 机制是我第一次见到，觉得新颖有趣。</description></item><item><title>pip 离线安装包</title><link>https://blog.formalscience.com/2018/12/13/2018-12-13-pip-install-package-offline/</link><pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/2018/12/13/2018-12-13-pip-install-package-offline/</guid><description>1. 使用场景 在没有网络的设备上使用 pip 安装包。下面以 sklearn 包为例展示如何在没有网络的环境下安装包。
2. 下载包到本地缓存 首先进入一个目录，在这个例子里是 /Users/bef0rewind/Downloads/pip-tmp 目录。
pip download sklearn 我这里下载到了一个缓存目录 /Users/bef0rewind/Downloads/pip-tmp，随便选一个就好。pip download 只会下载对应的包，不会进行安装。
此时使用，pip freeze 可以看到已经安装的包，如果之前没有安装过 sklearn，显示的列表里是没有这个包的。
3. 断网安装 为了展示没有网络的情况下如何安装，我断开网络进行了验证。
pip install --no-index --find-links=/Users/bef0rewind/Downloads/pip-tmp sklearn 其中 --find-links 要 pip 从指定的目录里寻找安装包。
4. 其他 如果要用 Python3，而系统默认的版本是 Python 2，则可以将 pip 命令换成 pip3。</description></item><item><title>Escape from escape analysis</title><link>https://blog.formalscience.com/2018/11/30/2018-11-30-escape-from-escape-analysis/</link><pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/2018/11/30/2018-11-30-escape-from-escape-analysis/</guid><description>1. 逃逸分析背景 Go 语言采用了并发的（Concurrent）、非移动的（Non-Movable）、非分代的（Non-Generational）、基于三色（Tri-color）标记的垃圾回收（Garbage Collection）算法，只在 特定阶段开启写屏障（write barrier）。 特点是全局停顿时间比较少，在一些场景下是十微秒级别的。
垃圾回收算法针对的是堆（heap）中的内存。 为了减少垃圾回收的时间消耗，Go 语言在编译阶段通过静态分析算法对程序的结构进行分析，尽可能讲对象分配在栈上（如果这个对象的生命周期在它定义的函数返回时就结束的话）。 这一算法也利用了 Go 语言在函数传递参数时总是传递参数的值这一个语言特性。
而静态分析不总是完备的，会有一些本来可以分配在栈上的对象被 Go 的编译器分配在了堆上。 如这篇文章《Golang escape analysis》所描述的一些例子一样，有些对象本来可以避免逃逸（Escape，指的是对象被分配在堆上）。
对于某些场景，我们确定一个对象肯定可以（也应当）被分配在栈上，但是它却逃逸了。 这样在某些关键路径上的逃逸的对象会造成大量的分配和垃圾回收。
2. Go 版本 使用的 Go 版本为今晚刚从 master 分支上 pull 下的源码直接构建。
ThinkPad-X1-Carbon:bin bef0rewind$ ./go version go version devel +42e8b9c3a4 Fri Nov 30 15:17:34 2018 +0000 darwin/amd64 3. 示例 // file: escape.go package main import &amp;#34;fmt&amp;#34; type BigTempObject struct { /// ... field1 int } func causeEscape(i interface{}) { switch i.</description></item><item><title>Golang Receiver Type 探索</title><link>https://blog.formalscience.com/2018/11/21/2018-11-21-golang-receiver-type/</link><pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/2018/11/21/2018-11-21-golang-receiver-type/</guid><description>1. 参考 在 Go 的官方 spec 中有以下涉及到类型和方法的章节，如果需要了解具体的细节，可以参考阅读。
https://golang.google.cn/ref/spec#Method_sets https://golang.google.cn/ref/spec#Types https://golang.google.cn/ref/spec#Struct_types https://golang.google.cn/ref/spec#Composite_literals 核心的概念是 method sets：
A type may have a method set associated with it. The method set of an interface type is its interface. The method set of any other type T consists of all methods declared with receiver type T. The method set of the corresponding pointer type *T is the set of all methods declared with receiver *T or T (that is, it also contains the method set of T).</description></item><item><title>Call/CC (call-with-current-continuation) 概念学习</title><link>https://blog.formalscience.com/drafts/call-cc/</link><pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/drafts/call-cc/</guid><description>动机：不知道第一次听到这个名词是什么时候，以前也尝试学习过，没学会，加上当时兴趣众多，也就没有钻研。现在看到了，发现可以学了，借用朋友的话，也许是到了“赏味期”。
Wiki 上介绍说：
In Scheme programming, the function call-with-current-continuation, abbreviated call/cc, is used as a control operator. It has been adopted by several other programming languages.
Taking a function f as its only argument, (call/cc f) within an expression is applied to the current continuation of the expression.
call/cc 是一个控制操作符，用来控制当前表达式的 continuation 。
continuation 词典中的一个含义是 “the action of carrying something on over a period of time or the process of being carried on”，而在计算机科学中，“a continuation is an abstract representation of the control state of a computer program”。</description></item><item><title>golang pprof profiler label</title><link>https://blog.formalscience.com/drafts/golang_pprof_label/</link><pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/drafts/golang_pprof_label/</guid><description>git clone -b release-branch.go1.10 https://github.com/golang/go.git release-branch.go1.10 cd release-branch.go1.10/src ./make.bash Building Go cmd/dist using /usr/lib/go-1.10. Building Go toolchain1 using /usr/lib/go-1.10. Building Go bootstrap cmd/go (go_bootstrap) using Go toolchain1. Building Go toolchain2 using go_bootstrap and Go toolchain1. Building Go toolchain3 using go_bootstrap and Go toolchain2. Building packages and commands for linux/amd64. --- Installed Go for linux/amd64 in ~/Projects/release-branch.go1.10 Installed commands in ~/Projects/release-branch.go1.10/bin</description></item><item><title>Useful Commands</title><link>https://blog.formalscience.com/2018/07/22/commands/</link><pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/2018/07/22/commands/</guid><description>Convert images to a video ffmpeg -r 30 -start_number 3455 -i _IMG%d.jpg -s 960X600 -pix_fmt yuv420p 30fps-960.mov -r 30: 30 frames per second -s 960X600: resolution -pix_fmt yuv420p: for OsX youtube-dl video and extract audio file youtube-dl --proxy socks5://127.0.0.1:1080 -x --audio-format mp3 youtube-url
virtualenvwrapper WORKON_HOME: which directory your environments are created in /usr/local/bin/virtualenvwrapper.sh: default location for its configuration file mkvirtualenv test --python=python3: make a virtual environment &amp;rsquo;test&amp;rsquo; with python3 rmvirtualenv test: remove a virtual environment &amp;rsquo;test' workon test3 or lsvirtualenv -b test3: activate a virtual environment &amp;rsquo;test' deactivate: exit current environment more details: search engine how to avoid globa packages how to copy an environment node &amp;amp;&amp;amp; npm npm complains: Error: Cannot find module 'process-nextick-args'</description></item><item><title>爬虫</title><link>https://blog.formalscience.com/drafts/%E7%88%AC%E8%99%AB/</link><pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/drafts/%E7%88%AC%E8%99%AB/</guid><description>https://stackoverflow.com/questions/21455349/xpath-query-get-attribute-href-from-a-tag
For the following HTML document:
&amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;a href=&amp;#34;http://www.example.com&amp;#34;&amp;gt;Example&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;http://www.stackoverflow.com&amp;#34;&amp;gt;SO&amp;lt;/a&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; The xpath query /html/body//a/@href (or simply //a/@href) will return:
http://www.example.com http://www.stackoverflow.com To select a specific instance use /html/body//a[N]/@href,
$ /html/body//a[2]/@href http://www.stackoverflow.com To test for strings contained in the attribute and return the attribute itself place the check on the tag not on the attribute:
$ /html/body//a[contains(@href,&amp;#39;example&amp;#39;)]/@href http://www.example.com Mixing the two:</description></item><item><title>Multi Websites in One Host (Ubuntu 18.04)</title><link>https://blog.formalscience.com/drafts/multi_websites_in_one_host_ubuntu_18/</link><pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/drafts/multi_websites_in_one_host_ubuntu_18/</guid><description>The configuration for Apache on my Ubuntu 18.04 (DigitialOcean) is /etc/apache2/apache2.conf.
# This is the main Apache server configuration file. It contains the # configuration directives that give the server its instructions. # See http://httpd.apache.org/docs/2.4/ for detailed information about # the directives and /usr/share/doc/apache2/README.Debian about Debian specific # hints. # # # Summary of how the Apache 2 configuration works in Debian: # The Apache 2 web server configuration in Debian is quite different to # upstream&amp;#39;s suggested way to configure the web server.</description></item><item><title>Understanding Linux Schedule Domain</title><link>https://blog.formalscience.com/drafts/linux_schedule_domain/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/drafts/linux_schedule_domain/</guid><description/></item><item><title>Upgrade DigitalOcean's Ubuntu 17.04 to LTS version in 2018-06</title><link>https://blog.formalscience.com/2018/06/23/2018-06-23_update_vps_ubuntu_version/</link><pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.formalscience.com/2018/06/23/2018-06-23_update_vps_ubuntu_version/</guid><description>What happened? I found my proxy for accessing some websites stopped working today, so I had to change my VPS&amp;rsquo;s IP address. After some trials, everything seemed OK and I started watching a skiing video made by NorthFace on Youtube.
Emmmm, I noticed 12 packages needed to be updated. Well, I typed sudo apt-get update and got messages like this (I didn&amp;rsquo;t save the error messages then):
404 Not Found [IP: 91.</description></item></channel></rss>